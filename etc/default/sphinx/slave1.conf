source base
{
    type = mysql

    sql_host = localhost
    sql_port = 3306
    sql_user = sql_user
    sql_pass = sql_pass
    sql_db   = sql_db

    sql_query_pre = SET NAMES UTF8
    sql_query_pre = set session character_set_server="UTF8"
    sql_query_pre = set session character_set_database="UTF8"
    sql_query_pre = set session character_set_connection="UTF8"
    sql_query_pre = set session character_set_results="UTF8"
    sql_query_pre = set session character_set_client="UTF8"

    sql_attr_timestamp = date_created
}

##############################################
#       BOOKS
##############################################

source search_book_main : base
{
    sql_query = SELECT b.id, b.title, UNIX_TIMESTAMP(b.date_created) AS date_created, \
                       b.authors_count, b.users_count\
                FROM book AS b

    sql_query_post_index = INSERT INTO sphinx_index_log (index_name, is_main) \
                           VALUES ('idx_slave1_book', 1)

    sql_field_string = title

    sql_attr_uint = authors_count
    sql_attr_uint = users_count
}

source search_book_delta : base
{
    sql_query = SELECT b.id, b.title, UNIX_TIMESTAMP(b.date_created) AS date_created, \
                       b.authors_count, b.users_count\
                FROM book AS b \
                WHERE b.date_created > (SELECT MAX(date_created) \
                                           FROM sphinx_index_log \
                                           WHERE index_name = 'idx_slave1_book' AND is_main = 1\
                                       ) \
                   OR b.date_updated > (SELECT MAX(date_created) \
                                             FROM sphinx_index_log \
                                             WHERE index_name = 'idx_slave1_book' AND is_main = 1\
                                         )

    sql_query_post_index = INSERT INTO sphinx_index_log (index_name, is_delta) \
                           VALUES ('idx_slave1_book', 1)

    sql_query_killlist = SELECT b.id FROM book AS b \
                           WHERE b.date_created > (SELECT MAX(date_created) \
                                                      FROM sphinx_index_log \
                                                      WHERE index_name = 'idx_slave1_book' AND is_main = 1\
                                                  ) \
                              OR b.date_updated > (SELECT MAX(date_created) \
                                                        FROM sphinx_index_log \
                                                        WHERE index_name = 'idx_slave1_book' AND is_main = 1\
                                                    )

    sql_field_string = title

    sql_attr_uint = authors_count
    sql_attr_uint = users_count
}


index idx_slave1_book_main
{
    source = search_book_main

    morphology = stem_enru
    html_strip = 1
    index_exact_words = 1
    # enable_star = 1

    path = {root}/yii-test/slave1/search_book_main
}

index idx_slave1_book_delta
{
    source = search_book_delta

    morphology = stem_enru
    html_strip = 1
    index_exact_words = 1
    # enable_star = 1

    path = {root}/yii-test/slave1/search_book_delta
}

index idx_slave1_book
{
    type = distributed

    local = idx_slave1_book_main
    local = idx_slave1_book_delta
}

##############################################
#       AUTHORS
##############################################

source search_author_main : base
{
    sql_query = SELECT a.id, a.name, UNIX_TIMESTAMP(a.date_created) AS date_created \
                FROM author AS a

    sql_query_post_index = INSERT INTO sphinx_index_log (index_name, is_main) \
                           VALUES ('idx_slave1_author', 1)

    sql_field_string = name
}

source search_author_delta : base
{
    sql_query = SELECT a.id, a.name, UNIX_TIMESTAMP(a.date_created) AS date_created \
                FROM author AS a \
                WHERE a.date_created > (SELECT MAX(date_created) \
                                           FROM sphinx_index_log \
                                           WHERE index_name = 'idx_slave1_author' AND is_main = 1\
                                       ) \
                   OR a.date_updated > (SELECT MAX(date_created) \
                                             FROM sphinx_index_log \
                                             WHERE index_name = 'idx_slave1_author' AND is_main = 1\
                                         )

    sql_query_post_index = INSERT INTO sphinx_index_log (index_name, is_delta) \
                           VALUES ('idx_slave1_author', 1)

    sql_query_killlist = SELECT a.id FROM author AS a \
                         WHERE a.date_created > (SELECT MAX(date_created) \
                                                    FROM sphinx_index_log \
                                                    WHERE index_name = 'idx_slave1_author' AND is_main = 1\
                                                ) \
                            OR a.date_updated > (SELECT MAX(date_created) \
                                                      FROM sphinx_index_log \
                                                      WHERE index_name = 'idx_slave1_author' AND is_main = 1\
                                                  )

    sql_field_string = name
}

index idx_slave1_author_main
{
    source = search_author_main

    morphology = stem_enru
    html_strip = 1
    index_exact_words = 1
    # enable_star = 1

    path = {root}/yii-test/slave1/search_author_main
}

index idx_slave1_author_delta
{
    source = search_author_delta

    morphology = stem_enru
    html_strip = 1
    index_exact_words = 1
    # enable_star = 1

    path = {root}/yii-test/slave1/search_author_delta
}

index idx_slave1_author
{
    type = distributed

    local = idx_slave1_author_main
    local = idx_slave1_author_delta
}



#############################################################################
## indexer settings
#############################################################################

indexer
{
    # memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
    # optional, default is 32M, max is 2047M, recommended is 256M to 1024M
    mem_limit           = 256M

    # maximum IO calls per second (for I/O throttling)
    # optional, default is 0 (unlimited)
    #
    # max_iops          = 40


    # maximum IO call size, bytes (for I/O throttling)
    # optional, default is 0 (unlimited)
    #
    # max_iosize        = 1048576
}


searchd
{

    listen              = 127.0.0.1:9301
    listen              = 127.0.0.1:9401:mysql41
    # listen              = localhost:9306:mysql41
    # log file, searchd run info is logged here
    # optional, default is 'searchd.log'
    log                 = {root}/yii-test/slave1/searchd.log
    query_log           = {root}/yii-test/slave1/query.log

    # client read timeout, seconds
    # optional, default is 5
    read_timeout        = 5

    # maximum amount of children to fork (concurrent searches to run)
    # optional, default is 0 (unlimited)
    max_children        = 0

    # PID file, searchd process ID file name
    # mandatory
    pid_file            = {root}/yii-test/slave1/slave1.pid

    # max amount of matches the daemon ever keeps in RAM, per-index
    # WARNING, THERE'S ALSO PER-QUERY LIMIT, SEE SetLimits() API CALL
    # default is 1000 (just like Google)

    # seamless rotate, prevents rotate stalls if precaching huge datasets
    # optional, default is 1
    seamless_rotate     = 1

    # whether to forcibly preopen all indexes on startup
    # optional, default is 0 (do not preopen)
    preopen_indexes     = 0

    # whether to unlink .old index copies on succesful rotation.
    # optional, default is 1 (do unlink)
    unlink_old          = 1

    binlog_path = # disable logging
}

# --eof--
